name: Recurent Docs check

on: # Trigger the workflow on push or pull request
  push:
    branches: [main]
  schedule:
    # At the end of every day
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}

jobs:
  build-docs:
    runs-on: ubuntu-20.04
    env:
      PUB_BRANCH: publication
      PATH_DATASETS: ${{ github.workspace }}/.datasets
    timeout-minutes: 20
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('docs/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          # install Texlive, see https://linuxconfig.org/how-to-install-latex-on-ubuntu-20-04-focal-fossa-linux
          sudo apt-get update
          sudo apt-get install -y cmake pandoc
          sudo apt-get install -y texlive-latex-extra dvipng texlive-pictures
          pip --version
          pip install --quiet --requirement requirements.txt
          pip install --quiet --requirement docs/requirements.txt
          pip list
        shell: bash

      - name: Generate notebook
        run: make ipynb
        env:
          DRY_RUN: 1
        shell: bash

      - name: Make Documentation
        working-directory: ./docs
        run: make docs

      - name: Upload built docs
        uses: actions/upload-artifact@v2
        with:
          name: docs-results-${{ github.sha }}
          path: docs/build/html/
        # Use always() to always run this step to publish test results when there are test failures
        if: success()
