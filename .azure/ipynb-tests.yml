trigger: none
pr:
  branches:
    include: [ main ]
  autoCancel: "true"
  drafts: "true"

# Multi-job configuration
# - https://learn.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml#multi-job-configuration

jobs:

  - job: check_diff
    pool:
      vmImage: 'Ubuntu-20.04'
    steps:
    - bash: |
        # pip install -U pip
        # pip --version
        pip install -r .actions/requirements.txt
        pip list
      displayName: 'Install dependencies'

    - bash: |
        head=$(git rev-parse origin/main)
        printf "Head: $head\n"
        git diff --name-only $head --output=target-diff.txt
        python .actions/assistant.py group-folders --fpath_gitdiff=target-diff.txt
        printf "Changed folders:\n"
        cat changed-folders.txt
      displayName: 'Process folders'

    - bash: |
        notebooks=$(python .actions/assistant.py generate-matrix changed-folders.txt)
        printf "Changed notebooks: $notebooks\n"
        echo "##vso[task.setVariable variable=dirs;isOutput=true]$notebooks"
      name: mtrx
      displayName: 'Changed matrix'

  - job: nbval
    dependsOn: check_diff
    strategy:
      matrix: $[ dependencies.check_diff.outputs['mtrx.dirs'] ]
    # how long to run the job before automatically cancelling
    timeoutInMinutes: "95"
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: "2"

    pool: "$(agent-pool)"
    # this need to have installed docker in the base image...
    container:
      image: "$(docker-image)"
      options: "--runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=all --shm-size=32g --name ci-container -v /usr/bin/docker:/tmp/docker:ro"

    variables:
      ACCELERATOR: CPU,GPU
      PATH_DATASETS: "$(Build.Repository.LocalPath)/.datasets"

    steps:

    - bash: |
        lspci | egrep 'VGA|3D'
        whereis nvidia
        nvidia-smi
        python --version
        pip list | grep torch
      displayName: 'Image info & NVIDIA'

    - script: |
        /tmp/docker exec -t -u 0 ci-container \
        sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
      displayName: 'Install Sudo in container (thanks Microsoft!)'

    - bash: |
        set -e
        sudo apt-get update -q --fix-missing
        sudo apt install -y tree ffmpeg
        # pip install --upgrade pip
        # pip --version
        pip install -r requirements.txt -r requirements/data.txt
        pip list
      displayName: 'Install dependencies'

    - bash: |
        python -c "import torch ; mgpu = torch.cuda.device_count() ; assert mgpu > 0, f'GPU: {mgpu}'"
      displayName: 'Sanity check'

    - bash: python .actions/assistant.py convert-ipynb $(notebook)
      displayName: 'Generate notebook'

    - bash: |
        set -e
        mkdir $(PATH_DATASETS)
        python .actions/assistant.py bash-test $(notebook)
        cat .actions/_ipynb-test.sh
        bash .actions/_ipynb-test.sh
      env:
        KAGGLE_USERNAME: $(KAGGLE_USERNAME)
        KAGGLE_KEY: $(KAGGLE_KEY)
      displayName: 'PyTest notebook'
